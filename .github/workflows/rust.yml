name: Rust
on: [push]

jobs:
  buildForSomePlatforms:
    name: Build Windows ${{ matrix.arch }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86_64
          - i686

    steps:
      - uses: actions/checkout@v2

      - name: Install deps
        run: |
          iwr -useb get.scoop.sh | iex
          echo "##[add-path]$HOME\scoop\shims"
          echo "##[add-path]C:\ProgramData\scoop\shims"
          scoop install aria2
          scoop install llvm
          echo "::set-env name=LIBCLANG_PATH::$HOME\scoop\apps\llvm\current\bin"

      - name: Install nightly
        uses: actions-rs/toolchain@v1
        with:
          target: ${{ matrix.arch }}-pc-windows-msvc
          toolchain: nightly
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          target: ${{ matrix.arch }}-pc-windows-msvc
          command: build

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          target: ${{ matrix.arch }}-pc-windows-msvc
          command: test
          args: -- --nocapture

      - name: Build Release
        uses: actions-rs/cargo@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          target: ${{ matrix.arch }}-pc-windows-msvc
          command: build
          args: --release

      - run: Rename-Item -Path "target\release\classicube_cef_loader_plugin.dll" -NewName "classicube_cef_loader_windows_${{ matrix.arch }}.dll"
        if: startsWith(github.ref, 'refs/tags/')

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/release/classicube_cef_loader_windows_${{ matrix.arch }}.dll
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#  linux:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Install deps
#        run: |
#          sudo apt-get -y update
#          sudo apt-get -y install clang llvm
#          sudo apt-get -y install libglib2.0-dev libcairo2-dev libpango1.0-dev libatk1.0-dev libgdk-pixbuf2.0-dev libgtk-3-dev
#
#      - name: Install nightly
#        uses: actions-rs/toolchain@v1
#        with:
#          toolchain: nightly
#          override: true
#
#      - name: Build
#        uses: actions-rs/cargo@v1
#        with:
#          command: build
#
#      - name: Test
#        uses: actions-rs/cargo@v1
#        with:
#          command: test
#          args: -- --nocapture
#
#      - name: Build Release
#        uses: actions-rs/cargo@v1
#        if: startsWith(github.ref, 'refs/tags/')
#        with:
#          command: build
#          args: --release
#
#      - run: mv target/release/libclassicube_cef_plugin.so target/release/classicube_cef_linux_amd64.so
#        if: startsWith(github.ref, 'refs/tags/')
#
#      - name: Upload Release
#        uses: softprops/action-gh-release@v1
#        if: startsWith(github.ref, 'refs/tags/')
#        with:
#          files: target/release/classicube_cef_linux_amd64.so
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#  mac:
#    runs-on: macOS-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Install deps
#        run: |
#          brew install llvm
#          echo "##[add-path]/usr/local/opt/llvm/bin"
#
#      - name: Install nightly
#        uses: actions-rs/toolchain@v1
#        with:
#          toolchain: nightly
#          override: true
#
#      - name: Build
#        uses: actions-rs/cargo@v1
#        with:
#          command: build
#
#      - name: Test
#        uses: actions-rs/cargo@v1
#        with:
#          command: test
#          args: -- --nocapture
#
#      - name: Build Release
#        uses: actions-rs/cargo@v1
#        if: startsWith(github.ref, 'refs/tags/')
#        with:
#          command: build
#          args: --release
#
#      - run: mv target/release/libclassicube_cef_plugin.dylib target/release/classicube_cef_macos_amd64.dylib
#        if: startsWith(github.ref, 'refs/tags/')
#
#      - name: Upload Release
#        uses: softprops/action-gh-release@v1
#        if: startsWith(github.ref, 'refs/tags/')
#        with:
#          files: target/release/classicube_cef_macos_amd64.dylib
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
