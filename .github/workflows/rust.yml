name: Rust
on: [push]

jobs:
  windows:
    name: Build Windows ${{ matrix.config.arch }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - { arch: x86_64, bits: 64 }
          - { arch: i686, bits: 32 }

    steps:
      - uses: actions/checkout@v2

      - name: Install deps
        run: |
          iwr -useb get.scoop.sh | iex
          echo "##[add-path]$HOME\scoop\shims"
          echo "##[add-path]C:\ProgramData\scoop\shims"
          scoop install aria2
          scoop install --arch ${{ matrix.config.bits }}bit llvm
          echo "::set-env name=LIBCLANG_PATH::$HOME\scoop\apps\llvm\current\bin"

      - name: Install nightly
        uses: actions-rs/toolchain@v1
        with:
          target: ${{ matrix.config.arch }}-pc-windows-msvc
          toolchain: nightly-${{ matrix.config.arch }}-pc-windows-msvc
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        if: startsWith(github.ref, 'refs/tags/') != true
        with:
          target: ${{ matrix.config.arch }}-pc-windows-msvc
          command: build

      - name: Test
        uses: actions-rs/cargo@v1
        if: startsWith(github.ref, 'refs/tags/') != true
        with:
          target: ${{ matrix.config.arch }}-pc-windows-msvc
          command: test
          args: -- --nocapture

      - name: Build Release
        uses: actions-rs/cargo@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          RUSTFLAGS: -g
        with:
          target: ${{ matrix.config.arch }}-pc-windows-msvc
          command: build
          args: --release

      - run: Rename-Item -Path "target\release\classicube_cef_loader_plugin.dll" -NewName "classicube_cef_loader_windows_${{ matrix.config.arch }}.dll"
        if: startsWith(github.ref, 'refs/tags/')

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/release/classicube_cef_loader_windows_${{ matrix.config.arch }}.dll
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  linux:
    name: Build Linux ${{ matrix.config.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - { arch: x86_64, bits: 64 }
          # I don't want to figure out the dependencies on 32 bit linux
          # - { arch: i686, bits: 32 }

    steps:
      - uses: actions/checkout@v2

      - name: Install 64 bit deps
        if: matrix.config.bits == 64
        run: |
          sudo apt-get update \
          && sudo apt-get install -y git curl gcc g++ build-essential libssl-dev pkg-config libglib2.0-dev libpango1.0-dev \
            libatk1.0-dev libgdk-pixbuf2.0-dev libgtk-3-dev cmake clang libnss3 libasound2 libxss1 libnspr4 \

      - name: Install nightly
        uses: actions-rs/toolchain@v1
        with:
          target: ${{ matrix.config.arch }}-unknown-linux-gnu
          toolchain: nightly-${{ matrix.config.arch }}-unknown-linux-gnu
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        if: startsWith(github.ref, 'refs/tags/') != true
        with:
          target: ${{ matrix.config.arch }}-unknown-linux-gnu
          command: build

      - name: Test
        uses: actions-rs/cargo@v1
        if: startsWith(github.ref, 'refs/tags/') != true
        with:
          target: ${{ matrix.config.arch }}-unknown-linux-gnu
          command: test
          args: -- --nocapture

      - name: Build Release
        uses: actions-rs/cargo@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          target: ${{ matrix.config.arch }}-unknown-linux-gnu
          command: build
          args: --release

      - run: mv target/release/libclassicube_cef_loader_plugin.so "classicube_cef_loader_linux_${{ matrix.config.arch }}.so"
        if: startsWith(github.ref, 'refs/tags/')

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: classicube_cef_loader_linux_${{ matrix.config.arch }}.so
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  mac:
    name: Build MacOS ${{ matrix.config.arch }}
    runs-on: macOS-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - { arch: x86_64, bits: 64 }
          # cef-binary doesn't have 32 bit download
          # - { arch: i686, bits: 32 }

    steps:
      - uses: actions/checkout@v2

      - name: Install deps
        run: |
          brew install cmake \

      - name: Install nightly
        uses: actions-rs/toolchain@v1
        with:
          target: ${{ matrix.config.arch }}-apple-darwin
          toolchain: nightly-${{ matrix.config.arch }}-apple-darwin
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        if: startsWith(github.ref, 'refs/tags/') != true
        with:
          target: ${{ matrix.config.arch }}-apple-darwin
          command: build

      - name: Test
        uses: actions-rs/cargo@v1
        if: startsWith(github.ref, 'refs/tags/') != true
        with:
          target: ${{ matrix.config.arch }}-apple-darwin
          command: test
          args: -- --nocapture

      - name: Build Release
        uses: actions-rs/cargo@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          target: ${{ matrix.config.arch }}-apple-darwin
          command: build
          args: --release

      - run: mv target/release/libclassicube_cef_loader_plugin.dylib "classicube_cef_loader_macos_${{ matrix.config.arch }}.dylib"
        if: startsWith(github.ref, 'refs/tags/')

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: classicube_cef_loader_macos_${{ matrix.config.arch }}.dylib
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
